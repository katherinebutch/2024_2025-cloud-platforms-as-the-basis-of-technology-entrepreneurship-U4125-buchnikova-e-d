<b>University:</b> [ITMO University](https://itmo.ru/ru/) <br>
<b>Faculty:</b> [FTMI](https://ftmi.itmo.ru) <br>
<b>Course:</b> [Cloud platforms as the basis of technology entrepreneurship](https://itmo-ict-faculty.github.io/cloud-platforms-as-the-basis-of-technology-entrepreneurship/) <br>
<b>Year:</b> 2024/2025 <br>
<b>Group:</b> U4125 <br>
<b>Author:</b> Buchnikova Ekaterina Dmitrievna  <br>
<b>Lab:</b> Lab1 <br>
<b>Date of create:</b> 05.05.2025 <br>
<b>Date of finished:</b> 06.05.2025<br>

<h1>Отчет по лабораторной работе №4 </h1>

Задание https://itmo-ict-faculty.github.io/cloud-platforms-as-the-basis-of-technology-entrepreneurship/education/labs2023-2024/lab4/lab4/#_5

**Тестовый вариант:** Веб-сервис, подсказывающий, как одеваться по погоде в одном из 30 городов России.

Сервер: cloud.ru.
База данных: Supabase
ИИ-помощник: Cursor.
Источник данных: API Яндекс.Погоды.
BI-платформа: [DataLense](https://datalens.yandex.cloud/jsqbdxpqqkj65-itmo-dashboard-course)
Язык программирования/фреймворки: Flask, JavaScript

![2025-05-06 15.43.04.jpg](https://github.com/katherinebutch/2024_2025-cloud-platforms-as-the-basis-of-technology-entrepreneurship-U4125-buchnikova-e-d/blob/main/lab4/2025-05-06%2015.43.04.jpg?raw=true)

Стоимость - платим только за хостинг сайта и доменное имя, за сервер арендованный (но он для много чего еще используется - сложно посчитать)

Минусы: 

В Supabase используется на бесплатном плане: 

- Ограничение на количество запросов в минуту
- Невозможно легко масштабировать без ручного вмешательства

При большом количестве запросов в сутки — начнутся задержки или ошибки

Нет промежуточного кэширования — одинаковые запросы от разных пользователей каждый раз грузят API => Можно внедрить кэширование погоды на 5–10 минут по городу.

В принипе не выдерживает любую нормальную нагрузку. 

**Тестирование партнерами:** 

![Screenshot at May 06 15-54-22.png](https://github.com/katherinebutch/2024_2025-cloud-platforms-as-the-basis-of-technology-entrepreneurship-U4125-buchnikova-e-d/blob/main/lab4/Screenshot%20at%20May%2006%2015-54-22.png?raw=true)



Предыдущая схема имела ограничения по масштабируемости. В новой версии:

-Все сервисы находятся внутри **Google Cloud Platform**

-Масштабируются автоматически

-Не требуют ручного администрирования

-Имеют бесплатные квоты

-Позволяет централизованно мониторить и логировать

**Логика работы:** 

1. Веб-интерфейс размещен на **Firebase Hosting**

2. Пользователь выбирает город.

3. Сайт отправляет запрос к **Cloud Run** — это serverless backend, который принимает данные от пользователя.

4. Cloud Run делает **HTTP-запрос к API погоды** (например, OpenWeather или другой открытый источник) по выбранному городу.

5. API возвращает температуру, влажность, осадки и другие погодные параметры.

6. Эти данные передаются обратно в Cloud Run.

7. Cloud Run передаёт погодные параметры в **ML-модель**, развернутую в **Vertex AI**.

8. Модель на основе данных формирует **текстовую рекомендацию**, например:

> "Сегодня в Казани +3°C, дождь. Наденьте куртку и непромокаемую обувь."

9. Сформированная рекомендация возвращается в Cloud Run, а затем — на сайт, где пользователь её видит.

10. Параллельно Cloud Run записывает информацию о запросе:

- город
- дата и время
- текст рекомендации

11. Всё это сохраняется в **Cloud SQL**

12. **Looker Studio** подключен к Cloud SQL и позволяет видеть в реальном времени:

- какие города популярны
- когда пользователи делают запросы (дни, часы)
- какие рекомендации выдает модель

| Сервис             | Нагрузка                           | Стоимость                                     |
| ------------------ | ---------------------------------- | --------------------------------------------- |
| Firebase Hosting   | до 10 000 посетителей              | $0 (входит в Free Tier)                       |
| Cloud Run          | 5000 вызовов по 500 мс             | $4                                            |
| Vertex AI Endpoint | 5000 вызовов легкой модели         | ~$2–3  $0.2 per 1K data points* (0-1M points) |
| Cloud SQL          | 1–2 ГБ данных, минимальный инстанс | ~$7–10                                        |
| Looker Studio      | Подключение к Cloud SQL            | $0                                            |
| Внешний API погоды | 5000 запросов                      | $10–15 (в зависимости от API)                 |

Примерно 35 долларов в месяц 

**Для продакшена:** Все в прицнипе - будет просто маштабировано по обему 
